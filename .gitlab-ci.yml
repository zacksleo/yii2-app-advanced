image: zacksleo/docker-composer:alpine
before_script:
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" > ~/deploy.key
    - chmod 0600 ~/deploy.key
    - ssh-add ~/deploy.key
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - export APP_ENV=testing
stages:
    - prepare
    - test
    - build
    - deploy
variables:
    COMPOSER_CACHE_DIR: "/cache/composer"
    DOCKER_DRIVER: overlay2
build-cache:
    stage: prepare
    script:
        - composer install --prefer-dist --optimize-autoloader -n --no-interaction -v --no-suggest
        - composer dump-autoload --optimize
    cache:
      key: "$CI_COMMIT_REF_NAME"
      paths:
        - vendor
    except:
        - docs
        - tags
    when: manual
build-package:
    stage: test
    script:
        - composer install --prefer-dist --optimize-autoloader -n --no-interaction -v --no-suggest --no-dev
        - composer dump-autoload --optimize
    dependencies: []
    cache:
      key: "$CI_COMMIT_REF_NAME"
      policy: pull
      paths:
        - vendor
    artifacts:
        name: "vendor"
        untracked: false
        expire_in: 60 mins
        paths:
            - vendor
    except:
        - docs
    only:
        - tags
phpcs:
    stage: test
    dependencies: []
    cache:
      key: "$CI_COMMIT_REF_NAME"
      policy: pull
      paths:
        - vendor
    script:
        - if [ ! -d "vendor" ]; then
        - composer install --prefer-dist --optimize-autoloader -n --no-interaction -v --no-suggest && composer dump-autoload --optimize
        - fi
        - php vendor/bin/phpcs --config-set ignore_warnings_on_exit 1
        - php vendor/bin/phpcs --standard=PSR2 --ignore=vendor/,console/migrations/,tests -w --colors ./
    except:
        - docs
        - develop
        - master
        - tags
phpmd:
    stage: test
    dependencies: []
    cache:
      key: "$CI_COMMIT_REF_NAME"
      paths:
        - vendor
    script:
        - if [ ! -d "vendor" ]; then
        - composer install --prefer-dist --optimize-autoloader -n --no-interaction -v --no-suggest && composer dump-autoload --optimize
        - fi
        - vendor/bin/phpmd api,backend,common,console,frontend text phpmd.xml --exclude vendor/,console/migrations --suffixes php
    except:
        - docs
        - develop
        - master
        - tags
codequality:
    stage: test
    image: docker:latest
    before_script: []
    cache: {}
    dependencies: []
    script:
         - docker pull codeclimate/codeclimate
         - VOLUME_PATH=/tmp/builds"$(echo $PWD | sed 's|^/[^/]*||')"
         - docker run --env CODECLIMATE_CODE="$VOLUME_PATH" -v /tmp/cc:/tmp/cc -v $VOLUME_PATH:/code -v /var/run/docker.sock:/var/run/docker.sock codeclimate/codeclimate analyze -f text
    except:
        - docs
        - tags
        - develop
        - master
    allow_failure: true
    when: manual
unit-test:
    stage: test
    services:
    - name: mysql:5.6
      alias: mysql
      command: ['--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci','--default-storage-engine=INNODB','--innodb_large_prefix=1','--innodb_file_format=Barracuda']
    - name: redis:alpine
      alias: redis
    variables:
        MYSQL_ROOT_PASSWORD: root
        MYSQL_DATABASE: web
        MYSQL_USER: web
        MYSQL_PASSWORD: web
    dependencies: []
    coverage: '/^\s*Lines:\s*\d+.\d+\%/'
    script:
        - if [ ! -d "vendor" ]; then
        - composer install --prefer-dist --optimize-autoloader -n --no-interaction -v --no-suggest && composer dump-autoload --optimize
        - fi
        - cp tests/.env .env
        - ./yii migrate/up --interactive=0
        - ./vendor/bin/codecept run unit -c tests --coverage --no-colors
    artifacts:
        name: "debug"
        when: on_failure
        untracked: true
        expire_in: 60 mins
        paths:
            - $CI_PROJECT_DIR/tests/_output
api-test:
    stage: test
    services:
    - name: mysql:5.6
      alias: mysql
      command: ['--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci','--default-storage-engine=INNODB','--innodb_large_prefix=1','--innodb_file_format=Barracuda']
    - name: redis:alpine
      alias: redis
    variables:
        MYSQL_ROOT_PASSWORD: root
        MYSQL_DATABASE: web
        MYSQL_USER: web
        MYSQL_PASSWORD: web
    dependencies: []
    script:
        - if [ ! -d "vendor" ]; then
        - composer install --prefer-dist --optimize-autoloader -n --no-interaction -v --no-suggest && composer dump-autoload --optimize
        - fi
        - cp tests/.env .env
        - ./yii migrate/up --interactive=0
        - php -S localhost:80 --docroot api/tests &>/dev/null&
        - ./vendor/bin/codecept run api -c tests
    artifacts:
        name: "debug"
        when: on_failure
        untracked: true
        expire_in: 60 mins
        paths:
            - $CI_PROJECT_DIR/api/runtime
            - $CI_PROJECT_DIR/tests/_output
production-image:
    stage: build
    image: docker:latest
    dependencies:
        - build-package
    before_script: []
    script:
        - if [ ! -f "vendor/autoload.php" ]; then
        - exit 1
        - fi
        - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
        - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG .
        - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
        - docker rmi $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
    only:
        - tags
production-server:
    stage: deploy
    variables:
        DEPLOY_SERVER: "$PRODUCTION_SERVER"
    dependencies: []
    script:
        - cd deploy/production
        - rsync -rtvhze ssh . root@$DEPLOY_SERVER:/data/$CI_PROJECT_NAME --stats
        - CHOWN_DIR="frontend/runtime frontend/web/assets frontend/web/uploads backend/runtime backend/web/assets backend/rbac console/runtime api/runtime api/web/assets"
        - ssh root@$DEPLOY_SERVER "docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY"
        - ssh root@$DEPLOY_SERVER "export COMPOSE_HTTP_TIMEOUT=120 && export DOCKER_CLIENT_TIMEOUT=120 && export TAG=$CI_COMMIT_TAG && cd /data/$CI_PROJECT_NAME && docker-compose pull web && docker-compose stop && docker-compose rm -f && docker-compose up -d --build"
        - ssh root@$DEPLOY_SERVER "docker exec -i $CI_PROJECT_NAME chown www-data:www-data $CHOWN_DIR"
        - ssh root@$DEPLOY_SERVER "docker exec -i $CI_PROJECT_NAME ./yii migrate/up --interactive=0"
    only:
        - tags
    when: manual
    environment:
        name: production
        url: http://$DEPLOY_SERVER

